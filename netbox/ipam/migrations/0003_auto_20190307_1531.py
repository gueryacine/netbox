# Generated by Django 2.1.7 on 2019-03-07 15:31

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('virtualization', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        ('ipam', '0002_auto_20190307_1531'),
        ('dcim', '0003_auto_20190307_1531'),
        ('tenancy', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='service',
            name='virtual_machine',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='virtualization.VirtualMachine'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='port_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.PortTemplate'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prefixes', to='ipam.Role'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='dcim.Site'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='tags',
            field=taggit.managers.TaggableManager(through='taggit.TaggedItem', to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='tenancy.Tenant'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='vlan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.VLAN'),
        ),
        migrations.AddField(
            model_name='prefix',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefixes', to='ipam.VRF'),
        ),
        migrations.AddField(
            model_name='porttemplategroup',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='port_template_groups', to='dcim.Site'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='PortTemplates', to='ipam.PortTemplateGroup'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PortTemplates', to='ipam.Role'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='PortTemplates', to='dcim.Site'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='tagged_vlans',
            field=models.ManyToManyField(blank=True, related_name='roles_as_tagged', to='ipam.VLAN'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='tags',
            field=taggit.managers.TaggableManager(through='taggit.TaggedItem', to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='PortTemplates', to='tenancy.Tenant'),
        ),
        migrations.AddField(
            model_name='porttemplate',
            name='untagged_vlan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_as_untagged', to='ipam.VLAN'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='interface',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ip_addresses', to='dcim.Interface'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='nat_inside',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nat_outside', to='ipam.IPAddress'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='tags',
            field=taggit.managers.TaggableManager(through='taggit.TaggedItem', to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ip_addresses', to='tenancy.Tenant'),
        ),
        migrations.AddField(
            model_name='ipaddress',
            name='vrf',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ip_addresses', to='ipam.VRF'),
        ),
        migrations.AddField(
            model_name='aggregate',
            name='rir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aggregates', to='ipam.RIR'),
        ),
        migrations.AddField(
            model_name='aggregate',
            name='tags',
            field=taggit.managers.TaggableManager(through='taggit.TaggedItem', to='taggit.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='vlangroup',
            unique_together={('site', 'slug'), ('site', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='vlan',
            unique_together={('group', 'name'), ('group', 'vid')},
        ),
        migrations.AlterUniqueTogether(
            name='porttemplategroup',
            unique_together={('site', 'slug'), ('site', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='porttemplate',
            unique_together={('group', 'name'), ('group',)},
        ),
    ]
